<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><atom:link rel="hub" href="http://tumblr.superfeedr.com/" xmlns:atom="http://www.w3.org/2005/Atom"/><description></description><title>Randy Burden</title><generator>Tumblr (3.0; @randyburden)</generator><link>http://randyburden.tumblr.com/</link><item><title>Restrict Access to an MVC Action or Controller by IP Address using a Custom Action Filter</title><description>&lt;p&gt;Scenario: You want to lock down access to a particular action or entire controller in your MVC application via the users IP address.  This can be particularly useful if you would like to restrict the Admin portion of your website to just your company’s IP address range.&lt;/p&gt;
&lt;p&gt;There are several ways to accomplish this task. IIS allows you to restrict by IP Address but what if you want to do it programmatically…&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Pseudo-code:&lt;/u&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Get users IP address&lt;/li&gt;
&lt;li&gt;Get list of valid IP addresses&lt;/li&gt;
&lt;li&gt;If users IP address is in the list of valid IP addresses, then display the secure page, else redirect the user to some other page.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Working within the context of ASP.NET MVC, putting this logic into a custom action filter would provide us application-wide access to this feature, making re-use as easy as decorating a particular action or entire controller with a single attribute.&lt;/p&gt;
&lt;p&gt;Assuming you already have a working MVC application, create a new class that will hold the logic for your custom action filter. I like to put my custom action filters in a folder named Filters. For this example, I will create a new class named AuthorizeIPAddress.cs in my Filters folder and the code will look like this:&lt;/p&gt;
&lt;pre class="brush: csharp;"&gt;using System;
using System.Web;
using System.Web.Mvc;
using System.Configuration;
 
namespace YourMVCApplication.Filters
{
    ///
    /// Only allows authorized IP addresses access.
    ///
    public class AuthorizeIPAddressAttribute : ActionFilterAttribute
    {
        public override void OnActionExecuting(ActionExecutingContext filterContext)
        {
            //Get users IP Address
            string ipAddress = HttpContext.Current.Request.UserHostAddress;
 
            if (!IsIpAddressValid(ipAddress.Trim()))
            {
                //Send back a HTTP Status code of 403 Forbidden
                filterContext.Result = new HttpStatusCodeResult(403);
            }
 
            base.OnActionExecuting(filterContext);
        } 
 
        ///
        /// Compares an IP address to list of valid IP addresses attempting to
        /// find a match
        ///
        ///String representation of a valid IP Address
        /// 
        public static bool IsIpAddressValid(string ipAddress)
        {
            //Split the users IP address into it's 4 octets (Assumes IPv4)
            string[] incomingOctets = ipAddress.Trim().Split(new char[] { '.' });
 
            //Get the valid IP addresses from the web.config
            string addresses =
              Convert.ToString(ConfigurationManager.AppSettings["AuthorizeIPAddresses"]);
 
            //Store each valid IP address in a string array
            string[] validIpAddresses = addresses.Trim().Split(new char[] { ',' });
 
            //Iterate through each valid IP address
            foreach (var validIpAddress in validIpAddresses)
            {
                //Return true if valid IP address matches the users
                if (validIpAddress.Trim() == ipAddress)
                {
                    return true;
                }
 
                //Split the valid IP address into it's 4 octets
                string[] validOctets = validIpAddress.Trim().Split(new char[] { '.' });
 
                bool matches = true;
 
                //Iterate through each octet
                for (int index = 0; index &amp;lt; validOctets.Length; index++)
                {
                    //Skip if octet is an asterisk indicating an entire
                    //subnet range is valid
                    if (validOctets[index] != "*")
                    {
                        if (validOctets[index] != incomingOctets[index])
                        {
                            matches = false;
                            break; //Break out of loop
                        }
                    }
                }
 
                if (matches)
                {
                    return true;
                }
            }
 
            //Found no matches
            return false;
        }
    }
}
&lt;/pre&gt;
&lt;p&gt;And here is the code to put in your Web.config file in the appSettings section:&lt;/p&gt;
&lt;p&gt;Of course you could easily save and retrieve this information from a database or XML file if you choose.&lt;/p&gt;
&lt;p&gt;And in your Controller, to implement this logic, simply place the following attribute above your controller or a particular action:&lt;/p&gt;
&lt;pre class="brush: csharp;"&gt;[AuthorizeIPAddress]
&lt;/pre&gt;
&lt;p&gt;Example usage at the action level:&lt;/p&gt;
&lt;pre class="brush: csharp;"&gt;[AuthorizeIPAddress]
public ActionResult AdministratorLogin()
{
    return View();
}
&lt;/pre&gt;
&lt;p&gt;Example usage at the controller level which will cause this logic to run on every action within the controller:&lt;/p&gt;
&lt;pre class="brush: csharp;"&gt;[AuthorizeIPAddress]
public class AdministratorController : BaseController
{
    ...
}
&lt;/pre&gt;
&lt;p&gt;The code should be self explanatory but I’ve added comments as well. There are many different ways to compare the users IP address to a list of valid IP addresses. My implementation is only so complex because it will also handle entire subnet ranges and not just a list of valid IP addresses by checking for the existence of an asterisk.&lt;/p&gt;</description><link>http://randyburden.tumblr.com/post/37917564325</link><guid>http://randyburden.tumblr.com/post/37917564325</guid><pubDate>Tue, 09 Aug 2011 00:00:00 -0500</pubDate><category>asp.net</category><category>authorization</category><category>csharp</category><category>custom action filter</category><category>ip address</category><category>mvc</category></item><item><title>T-SQL – Easy Cursor Optimization by Defining Attributes</title><description>&lt;p&gt;When creating lengthy T-SQL queries, sometimes a set-based approach just doesn’t cut it.&lt;/p&gt;
&lt;p&gt;So when you find yourself going with a procedural-based approach and using a Cursor like a foreach loop, be sure to check out the the available attributes for Cursors to boost performance.&lt;/p&gt;
&lt;p&gt;&lt;span id="more-124"&gt;&lt;/span&gt;I found that adding the following attributes to one of my cursors shaved a modest 7 seconds off of a long running report:&lt;/p&gt;
&lt;pre class="brush: sql;"&gt;DECLARE c CURSOR &lt;strong&gt;LOCAL FAST_FORWARD&lt;/strong&gt;&lt;/pre&gt;
&lt;p&gt;Source:&lt;br/&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms180169.aspx" target="_blank"&gt;MSDN: DECLARE CURSOR (Transact-SQL)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Further Reading:&lt;br/&gt;&lt;a href="http://ask.sqlservercentral.com/questions/884/set-based-vs-procedural" target="_blank"&gt;Set-Based vs. Procedural&lt;/a&gt;&lt;br/&gt;&lt;a href="http://blogs.msdn.com/b/simonince/archive/2009/03/30/procedural-versus-set-based-sql.aspx" target="_blank"&gt;Procedural versus Set-Based SQL&lt;/a&gt;&lt;/p&gt;</description><link>http://randyburden.tumblr.com/post/37916899732</link><guid>http://randyburden.tumblr.com/post/37916899732</guid><pubDate>Thu, 04 Aug 2011 00:00:00 -0500</pubDate><category>sql</category></item><item><title>Explicitly Specifying the Identity Column Value using Fluent NHibernate</title><description>&lt;p&gt;I recently ran into a situation where I was saving to a database table that did &lt;span&gt;not&lt;/span&gt; have an auto-incrementing identity column. I didn’t realize that at the time when I was setting up my NHibernate mapping and it caused me a headache for about half an hour attempting to figure out what was causing the problem.&lt;/p&gt;
&lt;p&gt;Unfortunately, I didn’t have NHibernate Profiler on the computer I was using so I had to figure it out using SQL Server Profiler but eventually I was able to obtain the raw SQL that NHibernate was generating for me:&lt;/p&gt;
&lt;pre class="brush: sql;"&gt;EXEC sp_executesql
N'INSERT INTO [CLIENT]
(SignUpDate, FullName, ClientId)
VALUES (@p0, @p1, @p2);
select SCOPE_IDENTITY()',
N'@p0 datetime,
@p1 nvarchar(4000),
@p2 int',
@p0 = '2011-07-29 01:56:14',
@p1 = N'Randy Burden', @p2 = 50
&lt;/pre&gt;
&lt;p&gt;I looked at that and went, “What&amp;#160;!?”&lt;/p&gt;
&lt;p&gt;After a few minutes, I caught on and realized that I needed to modify my mapping to explicitly specify that I would be providing the identity column value or in NHibernate terms, would be using an assigned generator.&lt;/p&gt;
&lt;p&gt;The solution was really quite easy using Fluent NHibernate. I simply made this change to my mapping:&lt;/p&gt;
&lt;pre class="brush: csharp;"&gt;Id(x =&amp;gt; x.ClientId).GeneratedBy.Assigned();
&lt;/pre&gt;
&lt;p&gt;If your using .hbm.xml files, you would do this:&lt;/p&gt;
&lt;p&gt;Doing it this way though does force you to also explicitly specify to NHibernate whether the object should use Save() or Update() when using ISession, meaning you cannot use the SaveOrUpdate() method.&lt;/p&gt;
&lt;p&gt;Resources: &lt;br/&gt;&lt;a href="http://www.nhforge.org/doc/nh/en/index.html#mapping-declaration-id-assigned" target="_blank"&gt;NHibernate Documentation on Assigned Identifiers&lt;/a&gt; &lt;br/&gt;&lt;a href="https://github.com/jagregory/fluent-nhibernate/wiki/Fluent-mapping" target="_blank"&gt;Fluent NHibernate Documentation on Id Property&lt;/a&gt;&lt;/p&gt;</description><link>http://randyburden.tumblr.com/post/37873460853</link><guid>http://randyburden.tumblr.com/post/37873460853</guid><pubDate>Fri, 29 Jul 2011 00:00:00 -0500</pubDate><category>fluent nhibernate</category><category>nhibernate</category><category>software development</category><category>sql</category><category>csharp</category></item><item><title>My Road to Software Development</title><description>&lt;p&gt;My journey to becoming a software developer was not the straight and narrow.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;18 and under&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When I was in my youth, I had no idea what I wanted to do as a career and never really gave it much thought. In my teens, I grew quite fond of the computer and at that time figured I would end up doing something involving technology. I wasn&amp;#8217;t one of those nerds who was programming at the age of 12 or anything although I probably was considered a bit of a nerd because I knew about computers and wore glasses.&lt;/p&gt;
&lt;p&gt;In high school I took Computer Science I and liked it okay. We developed in C++ but the teacher had no enthusiasm for the subject and really didn&amp;#8217;t make it that fun so programming came and went for me. I then participated in two new courses my school was offering: Electronics I and II. Man, those classes were definitely not fun as the instructor basically did nothing but supervise us as the computer taught us everything. Sure, the few labs we did were a little fun but most of the time was spent staring at a computer screen as a program taught you about series and parallel circuits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;18 - 22&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Immediately after high school I enrolled at Northlake Community College and started taking the basics and another programming course: Intro to Programming. Again, the teacher had very little enthusiasm for the subject and it was again in C++.&lt;/p&gt;
&lt;p&gt;During my second semester, I got a job at Fry&amp;#8217;s Electronics which had not yet opened up to the public. During those first few months at Fry&amp;#8217;s we all worked about 70 hours a week to get the store ready to open so school pretty much went to the wayside. So that was pretty much my first brush with college. It wasn&amp;#8217;t very satisfying and I had no real motivation to go so I just didn&amp;#8217;t.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;22-23&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Years later and already married and thought to myself, man I got to get back to school. A few days later I researched career options on the internet and saw that being an X-Ray Technician only required two years of school and it paid what at that time I thought was pretty good. So I enrolled at Brookhaven Community College and really thought that was what I was going to do as a career.&lt;/p&gt;
&lt;p&gt;Then after my first semester, my wife suggested to me that I take advantage of her employee and family discount at DeVry University where she worked as an administrative assistant. So I took a look at their degree offerings and decided on Biomedical Engineering since I already had experience with Electronics and had just finished an Anatomy I class. It took me two Calculus courses and two Electronics courses to find out that I really wasn&amp;#8217;t going to enjoy electrical engineering.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;23 - 26&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So I&amp;#8217;m still at DeVry and now looking to switch my degree program. I took another look at the different offerings and noticed that Computer Information Systems basically led to a software development career so I switched to that. The first programming class wasn&amp;#8217;t that challenging to me but the professor made it fun and interesting. The second programming course was when we were introduced to C# and again, the professor was enthusiastic and made the class fun which made all the difference in the world for me. After that class, I was hooked.&lt;/p&gt;
&lt;p&gt;Programming just came so natural to me while the other degree programs I had tried presented such a challenge and never really were fun. I felt with programming that I was creating something from nothing, building things with my creativity. Programming was very satisfying to me and I excelled in every programming class I took from then on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;26 - 27&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fresh out of school I began looking for a job. I spent countless hours on various websites learning ways to perfect my resume, studying Jr. Software Developer interview questions, and creating profiles on a lot of job search sites. I also spent quite a bit of time watching online training videos to stay brushed up on subjects such as ASP.NET, MVC, LINQ, SQL, etc.&lt;/p&gt;
&lt;p&gt;Many websites mentioned taking on a hobby programming project that you could mention during an interview so I decided on creating a Mp3 to Wav converter. I researched various libraries I could use, learned about multi-threaded programming in the process and really had a good time creating that application.&lt;/p&gt;
&lt;p&gt;A few months past by and I had only done about 4 phone interviews and had never been called in for an in person interview so I was getting a bit worried. Then I got a call from a job placement agency stating that they thought I might be a good fit for a direct to hire job. I thought it sounded great so I began the process of being vetted by the placement agency. They had me modify my resume a bit and grilled me a few times on the phone with C# questions and general programming patterns and principles. 3 Weeks later I was hired and starting my very first professional software development job!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;27&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My first week on the job I turned 27 and was so excited to get my feet wet. I have now been there for about 5 months and am still loving it. Everyday presents new and unique challenges but I am always learning new things and bettering myself and my skills in the process. It really is quite amazing how much I&amp;#8217;ve learned in that small amount of time. I&amp;#8217;ve already helped develop a MVC 3 site from the ground up, modified a WCF service, wrote a screen scraper/remote downloader, and many other smaller tasks and to think that I had done none of that 5 months before.&lt;/p&gt;
&lt;p&gt;Again, it&amp;#8217;s only been 5 months but I am really happy with my career choice of software development. I feel like I&amp;#8217;ve landed the perfect job and am just hoping the fun, excitement, and new challenges continue because I&amp;#8217;m loving it!&lt;/p&gt;</description><link>http://randyburden.tumblr.com/post/37872590406</link><guid>http://randyburden.tumblr.com/post/37872590406</guid><pubDate>Sun, 10 Jul 2011 00:00:00 -0500</pubDate><category>software development</category><category>personal</category></item></channel></rss>
